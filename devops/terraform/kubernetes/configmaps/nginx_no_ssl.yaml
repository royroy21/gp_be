apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
data:
  nginx.conf: |
    events {}
    
    http {
        upstream django {
            server django:8000;
        }

        server {
            listen 80;
    
            location /static/ {
                proxy_pass https://${ aws_bucket_domain_name }/static/;
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location /media/ {
                proxy_pass https://${ aws_bucket_domain_name }/media/;
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }    
    
            location / {
                proxy_pass http://django;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
    
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Port $server_port;
                proxy_set_header X-Forwarded-Server $host;
                proxy_redirect off;
    
                # Set CSRF headers
                proxy_set_header x-csrftoken $http_x_csrf_token;
                proxy_set_header x-requested-with $http_x_requested_with;
            }
        }
    }
